from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
from database import get_user_balance, update_user_balance, get_user_discount_tier, set_user_discount_tier, get_available_vpn_code, add_vpn_codes
import logging

def get_user_id(update: Update) -> int:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    return update.effective_user.id

logger = logging.getLogger(__name__)

def private_only(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ"""
    async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE):
        if update.effective_chat.type != 'private':
            await update.message.reply_text('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.')
            return
        return await func(update, context)
    return wrapper

@private_only
async def shop_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ —Å–∫–∏–¥–æ–∫"""
    keyboard = [
        [InlineKeyboardButton('5% —Å–∫–∏–¥–∫–∞ - 5000 LumeCoin', callback_data='discount_5')],
        [InlineKeyboardButton('10% —Å–∫–∏–¥–∫–∞ - 10000 LumeCoin', callback_data='discount_10')],
        [InlineKeyboardButton('20% —Å–∫–∏–¥–∫–∞ - 20000 LumeCoin', callback_data='discount_20')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('üõí –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–∫–∏–¥–∫–∏:', reply_markup=reply_markup)

async def discount_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ —Å–∫–∏–¥–∫–∏"""
    query = update.callback_query
    await query.answer()

    user_id = get_user_id(update)
    callback_data = query.data

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–∫–∏–¥–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
    discount_mapping = {
        'discount_5': (5, 5000),
        'discount_10': (10, 10000),
        'discount_20': (20, 20000)
    }

    if callback_data not in discount_mapping:
        await query.edit_message_text('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.')
        return

    discount_tier, cost = discount_mapping[callback_data]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_balance = get_user_balance(user_id)
    if current_balance < cost:
        await query.edit_message_text(f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: {current_balance} LumeCoin')
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–∫–∏–¥–∫–∏
    update_user_balance(user_id, current_balance - cost)
    set_user_discount_tier(user_id, discount_tier)

    await query.edit_message_text(f'‚úÖ –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å–∫–∏–¥–∫—É {discount_tier}%. –°—Ä–µ–¥—Å—Ç–≤–∞ —Å–ø–∏—Å–∞–Ω—ã.')

@private_only
async def vpn_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ VPN-–ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    keyboard = [
        [InlineKeyboardButton('1 –Ω–µ–¥–µ–ª—è - 3000 LumeCoin', callback_data='vpn_1w')],
        [InlineKeyboardButton('1 –º–µ—Å—è—Ü - 10000 LumeCoin', callback_data='vpn_1m')],
        [InlineKeyboardButton('3 –º–µ—Å—è—Ü–∞ - 25000 LumeCoin', callback_data='vpn_3m')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('üõí –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ VPN:', reply_markup=reply_markup)

async def vpn_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ VPN"""
    query = update.callback_query
    await query.answer()

    user_id = get_user_id(update)
    callback_data = query.data

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø VPN –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
    vpn_mapping = {
        'vpn_1w': ('1w', 3000, '1 –Ω–µ–¥–µ–ª—é'),
        'vpn_1m': ('1m', 10000, '1 –º–µ—Å—è—Ü'),
        'vpn_3m': ('3m', 25000, '3 –º–µ—Å—è—Ü–∞')
    }

    if callback_data not in vpn_mapping:
        await query.edit_message_text('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.')
        return

    vpn_type, cost, period = vpn_mapping[callback_data]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_balance = get_user_balance(user_id)
    if current_balance < cost:
        await query.edit_message_text(f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: {current_balance} LumeCoin')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    vpn_code = get_available_vpn_code(vpn_type)
    if not vpn_code:
        await query.edit_message_text('‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.')
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞
    update_user_balance(user_id, current_balance - cost)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.edit_message_text(f'–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ {period}: `{vpn_code}`. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤ @NaizekVPN_bot.', parse_mode='Markdown')

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_handlers(application):
    application.add_handler(CommandHandler('shop', shop_command))
    application.add_handler(CallbackQueryHandler(discount_callback, pattern='^discount_'))
    application.add_handler(CommandHandler('vpn', vpn_command))
    application.add_handler(CallbackQueryHandler(vpn_callback, pattern='^vpn_'))